.TH YOUTUBE_TRANSCRIPT 1 "June 2025" "1.0" "User Commands"
.SH NAME
youtube_transcript \- fetch and save YouTube video transcripts from the command line
.SH SYNOPSIS
.B python main.py
.RI [ OPTIONS ] " VIDEO_ID"
.SH DESCRIPTION
A command-line tool to fetch and save YouTube video transcripts (subtitles) in your preferred language(s).

.SH OPTIONS
.TP
.B -l, --languages
Comma-separated list of language codes to try (default: en,fa). Example: en,fa,de
.TP
.B -o, --output
Output file path to save the transcript. If omitted, the transcript is printed to the terminal.
.TP
.B --proxy
HTTP proxy URI. If omitted, no proxy is used.
.TP
.B --timeout
Timeout in seconds for fetching the transcript. If omitted, no explicit timeout is set for the request.
.TP
.B -h, --help
Show help message and exit.
.TP
.B --log-level \fILEVEL\fP
Set the logging level. \fILEVEL\fP can be DEBUG, INFO, WARNING, ERROR, CRITICAL. Default is WARNING.
.TP
.B -v, --verbose
Enable verbose output (sets log level to INFO).
.TP
.B -d, --debug
Enable debug output (sets log level to DEBUG). Overrides other logging settings.

.SH EXAMPLES
Fetch English and Farsi subtitles and print to terminal:
.br
.B python main.py dQw4w9WgXcQ
.PP
Fetch only German subtitles and print to terminal:
.br
.B python main.py dQw4w9WgXcQ -l de
.PP
Fetch English subtitles and save to a file:
.br
.B python main.py dQw4w9WgXcQ -l en -o transcript.txt
.PP
Fetch subtitles using a proxy:
.br
.B python main.py dQw4w9WgXcQ --proxy http://127.0.0.1:2081
.PP
Fetch English subtitles with a 10-second timeout:
.br
.B python main.py dQw4w9WgXcQ -l en --timeout 10
.PP
Fetch transcript with verbose (INFO level) logging:
.br
.B python main.py dQw4w9WgXcQ -v
.PP
Fetch transcript with DEBUG level logging explicitly set:
.br
.B python main.py dQw4w9WgXcQ --log-level DEBUG

.SH OUTPUT FORMAT
The transcript is formatted as:
.br
[start_time] text
.br
Example:
.br
[0.00] Never gonna give you up
.br
[3.50] Never gonna let you down

.SH AUTHOR
Hossein Hazrati

.SH LICENSE
MIT License
